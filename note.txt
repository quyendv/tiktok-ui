- Video initiate: có cách sửa lỗi buộc dùng ssh key thay vì https, khi nào gặp thì xem: https://fullstack.edu.vn/learning/reactjs?id=0d56f3e5-e529-4dc2-bad7-3a7789204335
- Customize cra: https://fullstack.edu.vn/learning/reactjs?id=18bff2bc-6918-4ff6-af56-50a1c2d8398b
    + npm i -D customize-cra react-app-rewired
    + config-overrides.js
    + sửa package.json: https://github.com/timarney/react-app-rewired/#3-flip-the-existing-calls-to-react-scripts-in-npm-scripts-for-start-build-and-test
- babel-plugin-module-resolver: tránh việc import '../../../.....' quá dài
        -> https://fullstack.edu.vn/learning/reactjs?id=a15493ae-8244-4f87-9861-6710af2c2b5a
        -> https://www.npmjs.com/package/babel-plugin-module-resolver
    + Cài: npm install --save-dev babel-plugin-module-resolver
    + tạo .babelrc
    + vấn đề import kiểu đó giống import thư viện nên config khác đi
    + config theo video: https://youtu.be/wwGkGi1WFgg?t=289
        -> sau import nó sẽ lấy từ root và chỉ cần '~/App' nếu config dấu '~'
        -> chú ý rằng ~ chỉ đại diện cho ./src nên giúp ta dễ import file ở ngay cấp 1 src từ file cấp sâu trong src thôi
        -> với kiểu ../../ vân vân thì ta nên đổi thành ~/ còn kiểu ./ thì thôi thay ~/ làm gì
    + Editors autocompletion: https://youtu.be/wwGkGi1WFgg?t=395
        -> jsconfig.json rồi config theo video
    + Nạp babelrc vào webpack: https://youtu.be/wwGkGi1WFgg?t=484
        -> sửa file config-overrides.js theo video và docs: https://github.com/arackaf/customize-cra/blob/master/api.md#usebabelrc
        -> chú ý có lỗi nhận nhầm thành hooks thì disable nó đi
- prettier: https://fullstack.edu.vn/learning/reactjs?id=4149692d-7c4b-4fca-b7d1-7cdf4a28c04a
    -> tạo .prettierrc rồi copy rule vào, như a sơn cũng được (đầy đủ hơn trong setting, sau nên chuyển rule trong setting ra file .prettierrc vào cd/~)
    -> Thêm .vscode/setting.json rồi thêm config vào
    ==> máy cá nhân setup hết rồi nên có thể k cần, nhưng làm nhóm thì cần
- Cấu hình SASS/CSS:
    + Tạo components/GlobalStyles ...
    + Thêm <GlobalStyles></GlobalStyles> vào index.js
    + cài npm i -D sass
    + clear logo, index.css, App.css và import liên quan, để <h1>React App</h1> trong <App/> thôi
    + reset css: ta k code chay mà tải `npm install --save normalize.css`, link: https://github.com/necolas/normalize.css
        -> sau đó `@import 'normalize.css'` trong file GlobalStyles.scss
    + set Default:
        -> font: vào GlobalStyles @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap');
        -> tạo body (trong GlobalStyles luôn) paste font-family vào: font-family: 'Roboto', sans-serif;
        -> Dùng kĩ thuật font-size 62.5% cho html rồi font-size 1.6rem cho body để trả lại (62.5% để tiện css kích thước theo rem)
        -> *{box-sizing: border-box}
        -> Thêm line-height 1.5 và text-rendering: optimizeSpeed cho body (kiến thức mới)
        -> Thêm biến vào :root {} nếu cần
    ==> Tóm lại file GlobalStyles.scss có:
                @import 'normalize.css';
                @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap');

                :root {
                    --primary: #fe2c55;
                }

                * {
                    box-sizing: border-box;
                }

                html {
                    font-size: 62.5%;
                }

                body {
                    font-family: 'Roboto', sans-serif;
                    font-size: 1.6rem;
                    line-height: 1.5;
                    text-rendering: optimizeSpeed;
                }
- Cấu hình Router/Layout:
    1. Phân tích layout chính: https://youtu.be/FwTQ0yoF0_g?t=106
    2. Cài đặt react-router-dom: `npm i react-router-dom`
        -> tạo pages/Home & Following như đã học bài Router
        -> Thêm Router vào (lần này thêm ở file App.js chứ k phải index.js): https://youtu.be/FwTQ0yoF0_g?t=508
    3. Đưa cấu hình routea ra ngoài: https://youtu.be/FwTQ0yoF0_g?t=613
        + Ít pages thì để x10 lên vẫn bth, tuy nhiên cần biết cách đưa ra ngoài
        + Tạo routes/index.js, trong đó chia publicRoutes và privateRoutes chia pages k cần và cần đăng nhập mới xem được, chú ý khi import các thứ nên dùng ~luôn đi để khi chuyển vị trí code đi sang file khác vẫn đúng
        + trong App import ra publicRoutes rồi map nó ra, -> xem video rõ hơn
    4. Xây dựng cơ chế tải layout
        + thêm folder Layout trong components có folder DefaultLayout chứa index.js kèm các folder Header, Sidebar, ...
        + xem video + code dễ hiểu hơn
        + tối ưu import Layout: https://youtu.be/FwTQ0yoF0_g?t=1215
        + Tiếp theo là setup layout trong App
        + set up page layout null -> Fragment
        + Tối ưu page upload còn chứa header nữa: https://youtu.be/FwTQ0yoF0_g?t=1521
            -> tự import header vào layout
            -> set layout trong routes/index.js là HeaderOnly
        => vấn đề cuối: HeaderOnly và DefaultLayout đều có foller Header -> components chung này k nên đưa vào src/components (nơi chứa các components chung dùng ở đâu cũng được) mà đưa vào src/components/Layout/components (chứa components chung của 2 layout đó thôi)